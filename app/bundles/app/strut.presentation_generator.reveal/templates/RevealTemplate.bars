<html lang="en">

  <head>
    <meta charset="utf-8">

    <title>Deck Title</title>

    <meta name="description" content="A framework for easily creating beautiful presentations using HTML">
    <meta name="author" content="Hakim El Hattab">

    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <link rel="stylesheet" href="preview_export/reveal/css/reveal.css">
    <link rel="stylesheet" href="preview_export/reveal/css/theme/default.css" id="theme">

    <!-- For syntax highlighting -->
    <link rel="stylesheet" href="preview_export/reveal/lib/css/zenburn.css">

    <link rel="stylesheet" type="text/css" href="preview_export/css/main.css" />
    <link href='preview_export/css/web-fonts.css' rel='stylesheet' type='text/css' />
    <link href='styles/strut.themes/backgroundClasses.css' rel='stylesheet' type='text/css' />
    <link href='styles/strut.themes/surfaceClasses.css' rel='stylesheet' type='text/css' />
    <style>
.componentContainer {
    position: absolute;
    line-height: normal;
    /*-webkit-transform-origin: 135% 135%;
    -moz-transform-origin: 135% 135%;
    transform-origin: 135% 135%;*/
}

.transformContainer {
    -webkit-transform-origin: 0 0;
    -moz-transform-origin: 0 0;
    transform-origin: 0 0;
}

.bg {
    width: 100%;
    height: 100%;
}
</style>
<style type="text/css">
{{{customStylesheet}}}
</style>
  </head>

  <body class="{{surface}}">
    <div class="reveal">
      <div class="slides">
        {{#slides.models}}
        {{#attributes}}
          <section class="{{#or background ../../background}}{{/or}} slideContainer" style="width: 1024px; height: 768px">
            {{#components}}
              {{#renderComponent .}}{{/renderComponent}}
            {{/components}}
          </section>
        {{/attributes}}
        {{/slides.models}}
      </div>
    </div>

    <script src="preview_export/reveal/lib/js/head.min.js"></script>
    <script src="preview_export/reveal/js/reveal.js"></script>
    <script>
    if (!window.presStarted) {


      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration

      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,

        theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
        transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

        // Optional libraries used to extend on reveal.js
        dependencies: [
          { src: 'preview_export/reveal/lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'preview_export/reveal/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'preview_export/reveal/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'preview_export/reveal/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
          { src: 'preview_export/reveal/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
          { src: 'preview_export/reveal/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
          // { src: 'preview_export/reveal/plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; } }
          // { src: 'preview_export/reveal/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
        ]
      });
     }
    </script>
  </body>
</html>